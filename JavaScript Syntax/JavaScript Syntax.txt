JavaScript syntax is the set of rules, how JavaScript programs are constructed:
// How to create variables:
var x;
let y;

// How to use variables:
x = 5;
y = 6;
let z = x + y;

--------------------------------------------------------------------------------

JavaScript Values

The JavaScript syntax defines two types of values:

    Fixed values
    Variable values

Fixed values are called Literals.

Variable values are called Variables.

------------------------------------------------------

JavaScript Literals

The two most important syntax rules for fixed values are:

1. Numbers are written with or without decimals:
2. Strings are text, written within double or single quotes:

Example: JS-Literals.html

---------------------------------------------------------

JavaScript Variables

In a programming language, variables are used to store data values.

JavaScript uses the keywords var, let and const to declare variables.

An equal sign is used to assign values to variables.

In this example, x is defined as a variable. Then, x is assigned (given) the value 6:
let x;
x = 6; 

-----------------------------------------------------------------

JavaScript Operators

JavaScript uses arithmetic operators ( + - * / ) to compute values: 
JavaScript uses an assignment operator ( = ) to assign values to variables:

Example: JS-Operators.html

--------------------------------------------------------------------

JavaScript Expressions

An expression is a combination of values, variables, and operators, which computes to a value.

The computation is called an evaluation.

For example, 8 * 9 evaluates to 72:

Expressions can also contain variable values:
x * 10

The values can be of various types, such as numbers and strings.

For example, "Rezaul" + " "  + "Karim", evaluates to "Rezaul Karim":
"Rezaul" + " "  + "Karim"

Example: JS-Expressions.html

----------------------------------------------------------------------------

JavaScript Keywords

JavaScript keywords are used to identify actions to be performed.

The let keyword tells the browser to create variables:
let x, y;
x = 5 + 6;
y = x * 10;

The var keyword also tells the browser to create variables:
var a, b;
a = 5 + 6;
b = a * 10;

#In these examples, using var or let will produce the same result.

Example:JS-Keywords.html

-----------------------------------------------------------------

Not all JavaScript statements are "executed".

Code after double slashes // or between /* and */ is treated as a comment.

Comments are ignored, and will not be executed: JS-Comments.html

----------------------------------------------------------------

JavaScript Identifiers / Names

Identifiers are JavaScript names.

Identifiers are used to name variables and keywords, and functions.

The rules for legal names are the same in most programming languages.

A JavaScript name must begin with:

    A letter (A-Z or a-z)
    A dollar sign ($)
    Or an underscore (_)

Subsequent characters may be letters, digits, underscores, or dollar signs.


#Note

#Numbers are not allowed as the first character in names.

#This way JavaScript can easily distinguish identifiers from numbers.

-------------------------------------------------------------------------

JavaScript is Case Sensitive

All JavaScript identifiers are case sensitive. 

The variables lastName and lastname, are two different variables: JS-Case-Sensitive.html

#JavaScript does not interpret LET or Let as the keyword let.

-----------------------------------------------------------------------------

JavaScript and Camel Case

Historically, programmers have used different ways of joining multiple words into one variable name:

Hyphens:

first-name, last-name, master-card, inter-city.

#Hyphens are not allowed in JavaScript. They are reserved for subtractions.

Underscore:

first_name, last_name, master_card, inter_city.

Upper Camel Case (Pascal Case):

FirstName, LastName, MasterCard, InterCity.

Lower Camel Case:

JavaScript programmers tend to use camel case that starts with a lowercase letter:

firstName, lastName, masterCard, interCity.
